CREATE DATABASE hr_management;
USE hr_management;

// Th·ª© t·ª± t·∫°o b·∫£ng
// roles
// departments
// positions
// permistions
// role_permissions
// users
// attendances
// payrolls
// salary_slips
// leave_requests

üìå 1. B·∫£ng users - Th√¥ng tin nh√¢n vi√™n
CREATE TABLE users (
    user_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    identity VARCHAR(12) NOT NULL,
    email VARCHAR(100) UNIQUE CHECK (email LIKE '%@%.%'),
    phone VARCHAR(15) UNIQUE,
    full_name VARCHAR(100) NOT NULL,
    role_id BIGINT NOT NULL,
    department_id BIGINT NULL,
    position_id BIGINT NULL,
    status ENUM('ACTIVE', 'INACTIVE', 'BANNED') DEFAULT 'ACTIVE',
    hire_date DATE NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (role_id) REFERENCES roles(role_id) ON DELETE RESTRICT,
    FOREIGN KEY (department_id) REFERENCES departments(department_id) ON DELETE SET NULL,
    FOREIGN KEY (position_id) REFERENCES positions(position_id) ON DELETE SET NULL
);

üìå 2. B·∫£ng roles - Vai tr√≤
CREATE TABLE roles (
    role_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    role_name VARCHAR(50) UNIQUE NOT NULL,
    description VARCHAR(255) NULL
);

üìå 3. B·∫£ng permissions - Quy·ªÅn h·∫°n
CREATE TABLE permissions (
    permission_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    permission_name VARCHAR(100) UNIQUE NOT NULL,
    description VARCHAR(255) NULL
);

üìå 4. B·∫£ng role_permissions - Quy·ªÅn g√°n cho vai tr√≤
CREATE TABLE role_permissions (
    role_id BIGINT,
    permission_id BIGINT,
    PRIMARY KEY (role_id, permission_id),
    FOREIGN KEY (role_id) REFERENCES roles(role_id) ON DELETE CASCADE,
    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id) ON DELETE CASCADE
);

üìå 5. B·∫£ng departments - Ph√≤ng ban
CREATE TABLE departments (
    department_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    department_name VARCHAR(100) UNIQUE NOT NULL
);

üìå 6. B·∫£ng positions - Ch·ª©c v·ª•
CREATE TABLE positions (
    position_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    position_name VARCHAR(100) UNIQUE NOT NULL
);

üìå 7. B·∫£ng attendances - Ch·∫•m c√¥ng
CREATE TABLE attendances (
    attendance_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    user_id BIGINT NOT NULL,
    date DATE NOT NULL,
    check_in TIME NULL,
    check_out TIME NULL,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

üìå 8. B·∫£ng payrolls - B·∫£ng l∆∞∆°ng h√†ng th√°ng
CREATE TABLE payrolls (
    payroll_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    user_id BIGINT NOT NULL,
    month VARCHAR(7) NOT NULL, -- YYYY-MM
    basic_salary DECIMAL(15,2) NULL,
    overtime_salary DECIMAL(15,2) NULL,
    total_salary DECIMAL(15,2) NULL,
    FOREIGN KEY (user_id) REFERrolesENCES users(user_id) ON DELETE CASCADE
);

üìå 9. B·∫£ng salary_slips - Phi·∫øu l∆∞∆°ng
CREATE TABLE salary_slips (
    slip_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    payroll_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    issued_date DATE NULL,
    FOREIGN KEY (payroll_id) REFERENCES payrolls(payroll_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

üìå 10. B·∫£ng leave_requests - ƒê∆°n ngh·ªâ ph√©p
CREATE TABLE leave_requests (
    leave_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    user_id BIGINT NOT NULL,
    leave_type ENUM('Ngh·ªâ ·ªëm', 'Ngh·ªâ ph√©p', 'Kh√°c') NOT NULL,
    start_date DATE NULL,
    end_date DATE NULL,
    status ENUM('Ch·ªù duy·ªát','ƒê√£ duy·ªát','T·ª´ ch·ªëi') DEFAULT 'Ch·ªù duy·ªát',
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);


SHOW TABLES;roles

