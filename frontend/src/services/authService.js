import axios from 'axios';
import { toast } from 'react-toastify';
import { getPositionById } from './positionService';
import { getRoleById } from './roleService';

const apiUrl = process.env.REACT_APP_API_URL;
const API_URL = `${apiUrl}/auth/login`;

const axiosInstance = axios.create({
  baseURL: API_URL,
  headers: {
    'Content-Type': 'application/json',
  },
});

const authService = {
  login: async (username, password) => {
    try {
      const response = await axiosInstance.post('', {
        username: username,
        password: password,
      });

      if (response.data.token) {
        // L∆∞u th√¥ng tin c∆° b·∫£n tr∆∞·ªõc
        localStorage.setItem('token', response.data.token);
        localStorage.setItem('userId', response.data.user.userId || '');
        localStorage.setItem('fullName', response.data.user.fullName || '');

        const position = await getPositionById(response.data.user.positionId);
        localStorage.setItem('positionName', position.positionName || '');
        localStorage.setItem('roleName', response.data.roleName || '');

        toast.success('ƒêƒÉng nh·∫≠p th√†nh c√¥ng!');
        if (response.data.roleName === 'ROLE_HR') window.location.href = `/attendances`;
        else window.location.href = `/attendances/user/${response.data.user.userId}`;
        return response.data;
      } else {
        toast.error('Kh√¥ng nh·∫≠n ƒë∆∞·ª£c token t·ª´ m√°y ch·ªß!');
        throw new Error('Kh√¥ng nh·∫≠n ƒë∆∞·ª£c token t·ª´ m√°y ch·ªß.');
      }
    } catch (error) {
      const message = error.response?.data?.message || 'ƒêƒÉng nh·∫≠p th·∫•t b·∫°i. Vui l√≤ng ki·ªÉm tra th√¥ng tin!';
      toast.error(message);
      console.error('Login failed:', error.response ? error.response.data : error.message);
      throw error;
    }
  },

  isAuthenticated: () => {
    const token = localStorage.getItem('token');
    return !!token;
  },

  getToken: () => {
    return localStorage.getItem('token');
  },

  logout: () => {
    // X√≥a t·ª´ng key thay v√¨ d√πng localStorage.clear() (tr√°nh ·∫£nh h∆∞·ªüng c√°c key kh√°c)
    localStorage.removeItem('token');
    localStorage.removeItem('userId');
    localStorage.removeItem('fullName');
    localStorage.removeItem('positionName');
    localStorage.removeItem('roleName');

    // üîÅ Ph√°t s·ª± ki·ªán ƒë·ªÉ c√°c tab kh√°c b·∫Øt ƒë∆∞·ª£c
    localStorage.setItem('logout', Date.now());
    window.location.href = '/login'; // ƒëi·ªÅu h∆∞·ªõng l·∫°i trang login
  },
};

export default authService;
